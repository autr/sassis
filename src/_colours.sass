@import '_icons' 

@function str-replace($string, $search, $replace: '')
	$index: str-index($string, $search) 
	@if $index
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace)
	@return $string

@function encode-svg($svg)
	$encoded: ''
	$slice: 2000
	$index: 0
	$loops: ceil(str-length($svg) / $slice)

	@for $i from 1 through $loops
		$chunk: str-slice($svg, $index, $index + $slice - 1)
		$chunk: str-replace($chunk, '"', "%22")
		$chunk: str-replace($chunk, '<', '%3C')
		$chunk: str-replace($chunk, '>', '%3E')
		$chunk: str-replace($chunk, '&', '%26')
		$chunk: str-replace($chunk, '#', '%23')
		$chunk: str-replace($chunk, ',', '%2C')
		$chunk: str-replace($chunk, '=', '%3D')
		$chunk: str-replace($chunk, " ", '%20')
		$chunk: str-replace($chunk, "/", '%2F')
		$chunk: str-replace($chunk, ":", '%3A')
		$encoded: #{$encoded}#{$chunk}
		$index: $index + $slice
	@return url("data:image/svg+xml, #{$encoded}")

@function invert-color($hue, $sat: 95%, $light: 70%, $inv: false)
	@if $inv
		@return hsl( $hue, $sat, 100% - $light )
	@else
		@return hsl( $hue, $sat, $light )



@function counterpoint( $a )
	$b: adjust-hue( invert($a), 180 )
	$diff: lightness($a) - lightness($b)
	$off: $diff
	@if $off < 0
		$off: ( $off * -1 )
	$off: 100 - $off
	$light: lightness( $a )
	$amt: 0.5
	@if $light >= 50 
		$b: darken( $b, $off * 0.25 )
	@else
		$b: lighten( $b, $off * 0.25 )
	@return $b

=color( $color: var(--c3) ) 
	color: $color
	
=bg( $colour: var(--bg3), $names: '' ) 
	+set-prop( background-color, $colour, class-list($names) )


@function class-list($names, $prefix: '', $suffix: '' )
	$out: ''
	@if $names != ''
		@for $i from 1 through length($names)
			$name: nth($names, $i)
			$out: #{$out + $prefix + '.' + $name + $suffix}
			@if $i != length($names)
				$out: #{$out + ', '}
	@return $out

=createFilled( $c, $s, $bg )
	+set-prop(background, $c, $s )
	+set-prop(color, $bg, $s )
	.fill
		+set-prop(fill, $bg, $s )
	.stroke
		+set-prop(stroke, $bg, $s )
	&:after, &:before 
		+set-prop(border-color, $bg, $s )

=createColors( $c, $bg, $n: '', $active-filled: true, $use-interfaces: true ) 
	$s: class-list($n, '&')
	$raw: class-list($n)

	// basic ----------------------------------------------------

	@if $n != ''
		+set-prop( color, $c, $raw )
		+set-prop( border-color, $c, $raw ) 
	*
		+set-prop( border-color, $c, $raw ) 

	// headers ----------------------------------------------------

	h1, h2, h3, h4, h5, h6
		+set-prop( color, $c, $s )

	// form inputs ----------------------------------------------------
	input, select, textarea, input[type=range], textarea, .dropdown
		+set-prop(color, $c, $s )
	@debug "use interfaces on colours: #{$use-interfaces} / #{$n}";
	@if $use-interfaces

		textarea, input[type=text], input[type=number], input[type=email], input[type=password], select, .dropdown
			&:focus
				+set-prop(box-shadow, 0px 0px 0px 1px $c inset, $s )
		label:not(.disabled)
			&:active, &.active
				input[type=range], input[type=checkbox]+span, input[type=radio]+span
					&:not([disabled])
						+set-prop(box-shadow, 0px 0px 0px 1px $c inset, $s )

		input[type=range], input[type=checkbox]+span, input[type=radio]+span
			&:not([disabled])
				&:active,&.active
					+set-prop(box-shadow, 0px 0px 0px 1px $c inset, $s )

		input[type=range]
			+set-prop( background-color, $c, class-list($n, '&', '::-webkit-slider-thumb'), '&::-webkit-slider-thumb'  )

		.checkbox
			input + span
				+set-prop(border-color, $c, $s )
				&:before, &:after
					+set-prop(border-color, $c, $s )
		.radio, .checkbox
			input:checked + span
				+set-prop(background-color, $c, $s )
		.select, .chevron
			&:after
				+set-prop(border-color, $c, $s )

	// cool cross icon ----------------------------------------------------
	
	.cross, .checkbox-cross input:checked + span, .radio-cross input:checked + span
		+cross( $c, $s ) 
	.tick
		+tick( $c, $s )

	// svg! dont forget ----------------------------------------------------

	.fill
		+set-prop(fill, $c, $s )
	.stroke
		+set-prop(stroke, $c, $s )
	.edged
		+set-prop( box-shadow, 0px 0px 0px 1px inset, $s)


	button, .button
		+set-prop(border-color, $c, $s )
		+set-prop(color, $c, $s ) 

	.filled, button.filled, .button.filled, .tag
		+createFilled( $c, $s, $bg )

	a, button, .clickable, .button
		@if $active-filled
			&:active,&.active,&.focusable:focus
				&:not(.unclickable):not(.disabled),.bg
					+createFilled( $c, $s, $bg )
		@else
			&.active-filled
				&:active,&.active,&.focusable:focus
					&:not(.unclickable):not(.disabled),.bg
						+createFilled( $c, $s, $bg )


	a, select, button, .button
		+set-prop(color, $c, $s )
		+set-prop(border-color, $c, $s )

